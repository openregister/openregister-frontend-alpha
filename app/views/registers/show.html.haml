= content_for :page_title, "Register"

.breadcrumbs{"data-module" => "track-click"}
  %ol
    %li
      = link_to "Components", "https://www.gov.uk/service-toolkit", target: :blank
    %li
      = link_to "GOV.UK Registers", root_path
    %li
      = link_to "Registers collection", registers_path
    %li.active
      #{prepare_register_name(params[:register])} register

%main#content{role:'main'}
  %header.page-header

    - if params[:phase] != 'beta'
      .grid-row
        .column-two-thirds
          .panel.panel-border-wide.phase
            %span.phase-tag In progress
            %p This data is in progress and it’s not ready for use. #{link_to 'Contact the team', 'https://registers.cloudapps.digital/support', target: :blank} to give us feedback.

    .grid-row
      .column-two-thirds
        %h1.heading-xlarge.register-name #{prepare_register_name(params[:register])} register

        .govuk-metadata
          %dl
            - if @register_meta_data['last-updated'].present?
              %dt Updated:
              %dd= DateTime.parse(@register_meta_data['last-updated']).strftime('%d/%m/%Y')
            - if @register_meta_data['custodian'].present?
              %dt Custodian:
              %dd= @register_meta_data['custodian']

        %p= @register_meta_data['register-record']['text']

        %details{:role => "group"}
          %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
            %span.summary What are Registers?
          #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
            %p Registers are reliable lists of information managed by one custodian from the government organisation responsible for maintaining the Register’s data.
            %p You can easily combine data from some Registers with data from another Register to build your service. For example, this Register can be combined with the #{link_to 'Territory Register', '/territory?phase=beta'}</a>.

            %p
              = link_to "Using Registers", "https://registers.cloudapps.digital/using-registers"
              %br
              = link_to "Register's collection", "https://registers.cloudapps.digital/registers"

        %details{:role => "group"}
          %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
            %span.summary How do I use a Register in my service?
          #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
            %p There are 2 ways to use Registers. You can either:
            %ul.list-bullet
              %li use an #{link_to "application programming interface", "https://registers-docs.cloudapps.digital/#api-documentation-for-registers"} (API) to automatically pull data from a register into your service
              %li download the data for this Register and keep your own copy up-to-date

      .column-one-third.about
        %h2.heading-small Managed by
        %div{class: "govuk-organisation-logo #{@register_meta_data['register-record']['registry']}"}
          %div{class: "logo-container #{crest_class_name(@register_meta_data['register-record']['registry'].parameterize)}"}
            %span= prepare_register_name(@register_meta_data['register-record']['registry'])

        %h2.heading-small Find out more
        %ul
          %li
            = link_to "Register updates", "#{params[:register]}/entries"
          %li
            = link_to "API documentation", "https://registers-docs.cloudapps.digital", target: :blank
          %li
            = link_to "Create a register", "https://www.gov.uk/guidance/creating-a-register", target: :blank
          %li
            = link_to "Contact the team", "https://registers.cloudapps.digital/support", target: :blank

  .search-wrapper
    .grid-row
      .column-full
        .form-group-wrapper.js-enabled
          %form
            .form-group
              = label_tag 'Filter by', nil, class: 'form-label', for: 'search'
              = select_tag "filter_results", options_for_select([['Current records', 'true'], ['Expired records', 'false'], ['Current and expired records', 'all']], selected: params[:current]), class: "form-control"

        .form-group-wrapper.js-enabled
          %div{class: "js-filter-list", "aria-hidden" => "true"}
            %form.js-filter-form
              .form-group
                %label{class: "form-label", for: "search"} Search for a record
                %input{name: "search", id: "search", class: "form-control"}

    %h2.heading-large
      = @records.count
      records

    %details{:role => "group"}
      %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
        %span.summary Download this data
      #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
        %p View as:
        %ul
          %li= link_to 'JSON', '#'
          %li= link_to 'YAML', '#'
          %li= link_to 'TTL', '#'
        %p Download as:
        %ul
          %li= link_to 'TSV', '#'
          %li= link_to 'CSV', '#'
          %li= link_to 'Spreadsheet', '#'
        %p Note: the spreadsheet formatting may affect any special characters contained in the data.

    %details{:role => "group"}
      %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
        %span.summary What are the column headings?
      #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
        %dl
          - @register_meta_data['register-record']['fields'].each do |item|
            - register_fields = @all_fields.select{ |field| field == item }
            - register_fields.each do |field|
              %dt= field[1]['key']
              %dd= field[1]['item'][0]['text']

  %table.js-filter-block.register-data-table
    %thead
      %tr
        - @register_meta_data['register-record']['fields'].each do |field|
          %th= field

    %tbody
      = render partial: 'record', collection: @records

= content_for :head do
  %script{src: "//code.jquery.com/jquery-3.2.1.min.js"}
  %script{src: "//cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.28.14/js/jquery.tablesorter.min.js"}

= content_for :javascript do
  :javascript
    function replaceQueryString(url, param, value) {
      var re = new RegExp("([?|&])" + param + "=.*?(&|$)","i");
      if (url.match(re))
        return url.replace(re,'$1' + param + "=" + value + '$2');
      else
        return url + '&' + param + "=" + value;
    }

    jQuery(function($) {
      GOVUK.filterListItems.init();
      $(".js-filter-block").tablesorter({ sortList: [[1,0]] });

      $("#filter_results").change(function () {
        if(document.location.href.includes('current')) {
          var url = replaceQueryString(window.location.href, 'current', this.value);
        } else {
          var url = document.location.href + "&current=" + this.value;
        }
        document.location = url;
      });
    });
