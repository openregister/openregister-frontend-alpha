= content_for :page_title, "Register"

.breadcrumbs{"data-module" => "track-click"}
  %ol
    %li
      = link_to "Components", "https://www.gov.uk/service-toolkit", target: :blank
    %li
      = link_to "GOV.UK Registers", root_path
    %li
      = link_to "Registers collection", registers_path
    %li.active
      #{prepare_register_name(params[:register])} register

%main#content{role:'main'}
  %header.page-header

    - if params[:phase] != 'beta'
      .grid-row
        .column-two-thirds
          .panel.panel-border-wide.phase
            %span.phase-tag In progress
            %p This data is in progress and it’s not ready for use. #{link_to 'Contact the team', 'https://registers.cloudapps.digital/support', target: :blank} to give us feedback.

    .grid-row
      .column-two-thirds
        %h1.heading-xlarge.register-name #{prepare_register_name(params[:register])} register

        .govuk-metadata
          %dl
            - if @register_metadata[:last_updated].present?
              %dt Updated:
              %dd= DateTime.parse(@register_metadata[:last_updated]).strftime('%d/%m/%Y')
            - if @register_metadata[:register_definition][:item]['registry'].present?
              %dt Managed by:
              %dd= link_to prepare_register_name(@register_metadata[:register_definition][:item]['registry']), "https://www.gov.uk/government/organisations/#{@register_metadata[:register_definition][:item]['registry']}", target: :blank

        %p= @register_metadata[:register_definition][:item]['text']

        %details{:role => "group"}
          %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
            %span.summary What are Registers?
          #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
            %p Registers are reliable lists of information managed by one custodian from the government organisation responsible for maintaining the Register’s data.
            %p
              = link_to "Using Registers", "https://registers.cloudapps.digital/using-registers"
              %br
              = link_to "Registers collection", "https://registers.cloudapps.digital/registers"

        %details{:role => "group"}
          %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
            %span.summary How do I use a Register in my service?
          #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
            %p There are 2 ways to use Registers. You can either:
            %ul.list-bullet
              %li use an #{link_to "application programming interface", "https://registers-docs.cloudapps.digital/#api-documentation-for-registers"} (API) to automatically pull data from a register into your service
              %li download the data for this Register and keep your own copy up-to-date

      .column-one-third.about
        %h2.heading-small Find out more
        %ul
          %li
            = link_to "Register updates", "#{params[:register]}/entries"
          %li
            = link_to "API documentation", "https://registers-docs.cloudapps.digital", target: :blank
          %li
            = link_to "Create a register", "https://www.gov.uk/guidance/creating-a-register", target: :blank
          %li
            = link_to "Contact the team", "https://registers.cloudapps.digital/support", target: :blank

  .search-wrapper
    .grid-row
      .column-full
        .form-group-wrapper.js-enabled
          %form
            .form-group
              = label_tag 'Filter by', nil, class: 'form-label', for: 'search'
              = select_tag "filter_results", options_for_select([['Existing records', 'true'], ['Closed records', 'false'], ['Existing and closed records', 'all']], selected: params[:current]), class: "form-control"

        .form-group-wrapper.js-enabled
          %div{class: "js-filter-list", "aria-hidden" => "true"}
            %form.js-filter-form
              .form-group
                %label{class: "form-label", for: "search"} Search for a record
                %input{name: "search", id: "search", class: "form-control"}
                %input{name: "page", id: "page", type: "hidden", value: "#{@page}"}

        .form-group-wrapper
          %form
            .form-group
              = link_to "Search", "?phase=beta&page=#{@next_page}&text=#{@text}", {class: 'button'}

    %h2.heading-large
      %span.register-count
        = @records_result[:total_results]
      records

      %p{id: "previous_page", class: "#{@page > 1 ? '' : 'hidden'}"}
        = link_to "Previous Page (#{@records_result[:page] - 1})", "?phase=beta&page=#{@records_result[:page] - 1}&text=#{@text}"
      - if @records_result[:more_results] == true
        %p{id: "next_page"}
          = link_to "Next Page (#{@records_result[:page] + 1})", "?phase=beta&page=#{@records_result[:page] + 1}&text=#{@text}"


    %details{:role => "group"}
      %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
        %span.summary Get a copy this data
      #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
        %p Download this data as: #{link_to 'TSV', '#'}, #{link_to 'CSV', '#'} or as a #{link_to 'Spreadsheet', '#'}.
        %p Preview a sample as #{link_to 'JSON', "https://#{params[:register]}.register.gov.uk/preview-records/json", target: :blank}, #{link_to 'YAML', "https://#{params[:register]}.register.gov.uk/preview-records/yaml", target: :blank} or #{link_to 'TTL', "https://#{params[:register]}.register.gov.uk/preview-records/turtle", target: :blank}.

    %details{:role => "group"}
      %summary{"aria-controls" => "details-content-0", "aria-expanded" => "false", :role => "button"}
        %span.summary What are the column headings?
      #details-content-0.panel.panel-border-narrow{"aria-hidden" => "true"}
        %dl
          - @register_metadata[:field_definitions].each do |field|
            %dt= field[:item]['field']
            %dd= field[:item]['text']

  %table.js-filter-block.register-data-table
    %thead
      %tr
        - @register_metadata[:field_definitions].each do |field|
          %th= field[:item]['field']

    %tbody{id: "results_table"}
      = render partial: 'record', collection: @records

= content_for :head do
  %script{src: "//code.jquery.com/jquery-3.2.1.min.js"}
  %script{src: "//cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.28.14/js/jquery.tablesorter.min.js"}

= content_for :javascript do
  :javascript
    // function replaceQueryString(url, param, value) {
    //   var re = new RegExp("([?|&])" + param + "=.*?(&|$)","i");
    //   if (url.match(re))
    //     return url.replace(re,'$1' + param + "=" + value + '$2');
    //   else
    //     return url + '&' + param + "=" + value;
    // }

    jQuery(function($) {
      $('#search').on('keyup', function() {
        var searchText = $(this).val();
        var url = "/country/get_data?phase=beta&page=#{@page}&text="+searchText;
        // console.log('URL');
        // console.log(url);

        $.get(url, function(data) {
          console.log('Got Data');
          console.log(data);

          results = JSON.parse(data.results);

          //$('#results_table').html("{escape_javascript(render partial: 'record', collection: @record_result[:data])}")
          $('#results_table').html(data.recordsTable);
          $('.register-count').text(results.total_results);
          $('#next_page a').attr('href', 'http://test.com');
          $('#next_page a').text('Page '+ results.page + 1);

          if (results.page > 1) {
            $('#previous_page').removeClass('hidden');
          }
        });
      });
    });

    // jQuery(function($) {
    //   GOVUK.filterListItems.init();
    //   $(".js-filter-block").tablesorter({ sortList: [[1,0]] });
    //
    //   $("#filter_results").change(function () {
    //     if(document.location.href.includes('current')) {
    //       var url = replaceQueryString(window.location.href, 'current', this.value);
    //     } else {
    //       var url = document.location.href + "&current=" + this.value;
    //     }
    //     document.location = url;
    //   });
    // });
